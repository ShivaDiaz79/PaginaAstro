---
import Logo from "./Logo.astro"


---

<header
  id="landing-header"
  class="py-3 px-10 flex items-center fixed top-0 w-full justify-between z-40 text-white"
>
  <div class="flex flex-grow basis-0">
    <a href="./">
      <img src="/blancowhite.png" alt="Logo" class=" rounded-lg bg-gray-500 opacity-50 h-16 w-32" />
    </a>
  </div>

  <nav class="hidden xl:block sm:hidden">
    <ul
      class="flex text-sm [&>li>a]:transition-colors [&>li>a]:duration-500 [&>li>a]:text-current [&>li>a]:font-medium [&>li>a]:inline-block [&>li>a]:px-4 [&>li>a]:py-2"
    >
      <li><a href="#aplicaciones">Aplicaciones</a></li>
      <li><a href="#website">Web Site</a></li>
      <li><a href="#webmaster">Web Master</a></li>
      <li><a href="#marqueting">Marketing</a></li>
      <li><a href="#others">Others</a></li>
      <li><a href="#animaciones">Animaciones - 3D</a></li>
    </ul>
  </nav>

  <nav class="flex flex-grow justify-end basis-0">
    <ul
      class="flex text-sm [&>li>a]:transition-colors [&>li>a]:duration-500 [&>li>a]:text-current [&>li>a]:font-medium [&>li>a]:inline-block [&>li>a]:px-4 [&>li>a]:py-2"
    >
      <li class="hidden xl:block sm:hidden"><a href="#">Cotiza</a></li>
      <li class="hidden xl:block sm:hidden"><a href="#">Contacto</a></li>
      <li class="sm:hidden border border-emerald-50 z-50"><a href="#" id="mobile-menu-toggle">Menú</a></li>
    </ul>
  </nav>

  
  <nav
  id="mobile-menu"
  class="hidden xl:hidden sm:block absolute top-24 bg-transparent text-white p-4 rounded shadow"
>
  <ul class="flex flex-col space-y-2">
    <li><a href="#aplicaciones">Aplicaciones</a></li>
    <li><a href="#website">Web Site</a></li>
    <li><a href="#webmaster">Web Master</a></li>
    <li><a href="#marqueting">Marketing</a></li>
    <li><a href="#others">Others</a></li>
    <li><a href="#animaciones">Animaciones - 3D</a></li>
  </ul>
</nav>

<script>
  const menuLinks = document.querySelectorAll("#mobile-menu a");
  const sections = document.querySelectorAll(".landing-section");

  // Función para obtener el color de una sección
  function getSectionColor(sectionId) {
    const sectionElement = document.querySelector(sectionId);
    return sectionElement.getAttribute("data-header-color");
  }

  // Función para cambiar el color del menú y las pestañas
  function changeMenuColorAndTabs(sectionId) {
    const color = getSectionColor(sectionId);
    menuLinks.forEach(menuLink => {
      menuLink.style.color = color;
    });
  }

  // Agregar listener de scroll
  window.addEventListener("scroll", () => {
    const scrollPosition = window.scrollY + window.innerHeight / 2;

    sections.forEach(section => {
      const sectionRect = section.getBoundingClientRect();
      if (sectionRect.top <= scrollPosition && sectionRect.bottom >= scrollPosition) {
        const sectionId = `#${section.getAttribute("id")}`;
        changeMenuColorAndTabs(sectionId);
      }
    });
  });

  // Agregar listeners a los enlaces del menú
  menuLinks.forEach(link => {
    link.addEventListener("click", event => {
      event.preventDefault();

      const sectionId = link.getAttribute("href");
      changeMenuColorAndTabs(sectionId);

      const sectionElement = document.querySelector(sectionId);
      sectionElement.scrollIntoView({
        behavior: "smooth"
      });
    });
  });
</script>




  <div
    id="menu-backdrop"
    class={`
      absolute bg-black/5 backdrop-blur-lg rounded
      translate-x-[var(--left)] translate-y-[var(--top)]
      left-0 top-0
      w-[var(--width)] h-[var(--height)]
      transition-all duration-500
      ease-in-out opacity-0 -z-10
    `}
  ></div>
</header>

<script>
  const listItem = document.querySelectorAll("#landing-header li")
  const menuBackDrop = document.querySelector("#menu-backdrop") as HTMLElement
  const mobileMenu = document.querySelector("#mobile-menu") as HTMLElement;
  const mobileMenuToggle = document.querySelector("#mobile-menu-toggle") as HTMLElement;

  listItem.forEach((item) => {
    item.addEventListener("mouseenter", () => {
      const { left, top, width, height } = item.getBoundingClientRect()

      menuBackDrop.style.setProperty("--left", `${left}px`)
      menuBackDrop.style.setProperty("--top", `${top}px`)
      menuBackDrop.style.setProperty("--width", `${width}px`)
      menuBackDrop.style.setProperty("--height", `${height}px`)

      menuBackDrop.style.opacity = "1"
      menuBackDrop.style.visibility = "visible"
    })

    item.addEventListener("mouseleave", () => {
      menuBackDrop.style.opacity = "0"
      menuBackDrop.style.visibility = "hidden"
    })
  })

  mobileMenuToggle.addEventListener("click", () => {
    mobileMenu.classList.toggle("hidden");
  });
</script>

<script>
  const headerEl = document.querySelector("#landing-header") as HTMLElement

  const observerOptions = {
    root: null,
    rootMargin: "0px", // en cuanto se vea el elemento
    threshold: 0.9, // porcentaje de visibilidad
  }

  const observer = new IntersectionObserver((entries) => {
    entries.forEach((entry) => {
      const { isIntersecting } = entry
      if (isIntersecting) {
        const color = entry.target.getAttribute("data-header-color")
        headerEl.style.color = color
      }
    })
  }, observerOptions)

  const sectionElements = document.querySelectorAll(".landing-section")
  sectionElements.forEach((section) => observer.observe(section))
</script>